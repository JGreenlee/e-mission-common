export const KWH_PER_GAL_GASOLINE: number;
export const DIESEL_GGE: number;
export const KWH_PER_GAL_DIESEL: number;
export const KWH_PER_GAL_BIODIESEL: number;
export const KWH_PER_GAL_LPG: number;
export const KWH_PER_GAL_CNG: number;
export const KWH_PER_KG_HYDROGEN: number;
export const KWH_PER_GAL_OTHER: number;
export const FUELS_KG_CO2_PER_KWH: {};
export const MI_PER_KM: number;
export function mpge_to_wh_per_km(mpge: any): number;
export function year_of_trip(trip: any): number;
export function is_point_inside_polygon(pt: any, vs: any): boolean;
export function get_feature_containing_point(pt: any, geojson: any): any;
export const latest_egrid_year: any;
export const latest_ntd_year: any;
export function get_egrid_region(coords: any, year: any): any;
export function get_uace_by_coords(coords: any, year: any): Promise<any>;
export function get_intensities_data(year: any, dataset: any): any;
export const _worst_rich_mode: any;
export const _worst_wh_per_km: number;
export function find_worst_rich_mode(label_options: any): any;
import * as Log from './emcommon.logger.js';
import { fetch_url } from './emcommon.util.js';
import { read_json_resource } from './emcommon.util.js';
import * as emcdb from './emcommon.diary.base_modes.js';
export { Log, fetch_url, read_json_resource, emcdb };
//# sourceMappingURL=emcommon.metrics.footprint.util.d.ts.map